{"name":"Angular-modular-seed","tagline":"Angular Modular Seed","body":"Angular modular Seed\r\n===================\r\n\r\n\r\nThis is and seed with modular approach, which is created, thing the performance of application and easy development for the developer\r\n\r\n----------\r\n\r\n\r\n\r\nFeatures\r\n-------------\r\n\r\n 1. Lazy loading of Contoller, factory, service, directive and javascript libraries\r\n 2. Using bower and npm to load front end dependencies\r\n 3. Application configuration file in json (development.json, production.json , staging.json)\r\n 4. CSS and scripts are loaded from json file (Prevent a large index.html)\r\n 5. Folder structure are in terms of Freatures in your application.\r\n\r\n\r\n\r\n> **Note:**\r\n\r\n> - This seed include contibtribution from many people from my organization and github, Its not standards seed\r\n\r\n\r\n#### <i class=\"icon-file\"></i> Setup the seed\r\n\r\nTo set up the seed you need to follow the following step;\r\n\r\nOpen node js and execute following command\r\n\r\n    git clone https://github.com/tushariscoolster/angular-modular-seed\r\n    npm install\r\n    bower install\r\n    npm install grunt -g\r\n    npm install grunt-cli -g\r\n\r\n#### <i class=\"icon-folder-open\"></i> Working With seed\r\n\r\nWorking with seed is very easy\r\nSeed has very few core concepts you need to follow\r\nSeed has three type of json file **development.json** **staging.json** **production.json**\r\nThis json files are in folder location here [Click Here](https://github.com/tushariscoolster/angular-modular-seed/tree/master/config)\r\n\r\nWhen you run\r\n\r\n    grunt server:development\r\nConfiguration are taken from development.json\r\n\r\n#### <i class=\"icon-pencil\"></i> Loading Assets files\r\n \r\n In this seed we load script and js from **assets.json** \r\n\r\n \r\n\r\n    {\r\n    \"scripts\": [\r\n        {\r\n            \"name\": \"icons\",\r\n            \"files\": [\"assets/vendor/modernizr/modernizr.js\"]\r\n        }\r\n    ],\r\n    \"modules\": [\r\n        {\r\n            \"name\": \"toaster\",\r\n            \"files\": [\"assets/vendor/angularjs-toaster/toaster.js\", \"assets/vendor/angularjs-toaster/toaster.css\"]\r\n         }\r\n    ],\r\n    \"angularscript\": [\r\n        {\r\n            \"name\": \"login\",\r\n            \"files\": [\"modules/login/login.controller.js\", \"modules/login/login.factory.js\", \"assets/script/directive/sweetalert.directive.js\"]\r\n         }\r\n    ]\r\n\r\nIf You want to load specific module foe specific route\r\n\r\nYou route.js will become\r\n\r\n    .state('app.login', {\r\n                url: '/login',\r\n                title: 'Single View',\r\n                templateUrl: 'modules/login/login.html',\r\n                controller: 'LoginController',\r\n                controllerAs: 'login',\r\n                resolve: helper.resolveFor(toaster, 'login')\r\n            })\r\n\r\n\r\n#### <i class=\"icon-trash\"></i> Generating dist copy\r\n\r\nTo generate the dist copy of you app\r\nrun \r\n\r\n    grunt build:production\r\n\r\n> **Note:-** production indicates configuration will be picked from production.json\r\n\r\nThrought the seed have followed the style guide of [Johnpapa](https://github.com/johnpapa/angular-styleguide)\r\n\r\n\r\n#### <i class=\"icon-hdd\"></i> Integration with backedn\r\n\r\nMy motive to create this seed was, front end should be created with static json and does not ahve to wai for apis for backend\r\n\r\nSo i created url.js\r\n\r\n      'development': {\r\n            'login': 'api/login'\r\n\r\n        },\r\n        'mock': {\r\n            'login': 'assets/json/login.json'\r\n        }\r\n\r\nWhen user run \r\n\r\n    grunt server:development\r\nAutomatically login api will be called by application where as when user run\r\n\r\n    grunt server:mock\r\nautomatically all backend url will get chage to static.json\r\n\r\nBefore that you need to write the factories in following way\r\n\r\n     function login() {\r\n            var url = APP_URL[$enviornment.urlname].login;\r\n            var postType = restangularParams('post', $enviornment.urlname);\r\n            return Restangular.withConfig(function (RestangularConfigurer) {\r\n                RestangularConfigurer.setBaseUrl($enviornment.backendurl);\r\n            })[postType.value](url)[postType.type]({\r\n                status: status\r\n            });\r\n        }\r\nWhere login indicate the key value in url.js\r\n\r\nYou can seed the sample of login module i  have implemented in below seed\r\n\r\n\r\n\r\n----------\r\n\r\n## Contributing\r\n\r\nOpen an issue first to discuss potential changes/additions. If you have questions with the guide, feel free to leave them as issues in the repository. If you find a typo, create a pull request. The idea is to keep the content up to date and use github’s native feature to help tell the story with issues and PR’s, which are all searchable via google. Why? Because odds are if you have a question, someone else does too! You can learn more here at about how to contribute.\r\n\r\n*By contributing to this repository you are agreeing to make your content available subject to the license of this repository.*\r\n\r\n### Process\r\n    1. Discuss the changes in a GitHub issue.\r\n    2. Open a Pull Request, reference the issue, and explain the change and why it adds value.\r\n    3. The Pull Request will be evaluated and either merged or declined.\r\n\r\n## License\r\n\r\n Use this guide. Attributions are appreciated._\r\n\r\n### Copyright\r\n\r\nCopyright (c) 2014-2015 [Tushar Borole](www.tusharborole.com)\r\n\r\n### (The MIT License)\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}